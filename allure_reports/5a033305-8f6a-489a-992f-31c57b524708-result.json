{"name": "Submit customer feedback with empty body and receive an error", "status": "failed", "statusDetails": {"message": "AssertionError: Got 200 status code in response", "trace": "app = <application.Application object at 0x10ad52da0>\n\n    @allure.feature('Customer Feedback')\n    @allure.title('Submit customer feedback with empty body and receive an error')\n    @pytest.mark.negative\n    def test_when_submitting_empty_feedback_should_receive_error(app):\n        payload = {}\n        app.nps_request.send_feedback(payload)\n>       app.nps_request.validate_status(expected_code=400)\n\ntests/api/nps_test.py:32: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <src.api.nps_request.NPSRequest object at 0x10adb7080>, expected_code = 400\n\n    @allure.step('Validating response status code; expected - {expected_code}')\n    def validate_status(self, expected_code: int):\n        if not expected_code == self.response_status_code:\n            actual_code = self.response_status_code\n>           raise AssertionError(f'Got {actual_code} status code in response')\nE           AssertionError: Got 200 status code in response\n\nsrc/api/base_request.py:37: AssertionError"}, "steps": [{"name": "Sending user feedback", "status": "passed", "attachments": [{"name": "Response body", "source": "4216720b-3eda-4399-b9a3-0e99d4c1f611-attachment.attach"}], "parameters": [{"name": "payload", "value": "{}"}], "start": 1567000087394, "stop": 1567000087403}, {"name": "Validating response status code; expected - 400", "status": "failed", "statusDetails": {"message": "AssertionError: Got 200 status code in response\n", "trace": "  File \"/Users/akovalevych/Projects/imhio-task/venv/lib/python3.7/site-packages/allure_commons/_allure.py\", line 157, in impl\n    return func(*a, **kw)\n  File \"/Users/akovalevych/Projects/imhio-task/src/api/base_request.py\", line 37, in validate_status\n    raise AssertionError(f'Got {actual_code} status code in response')\n"}, "parameters": [{"name": "expected_code", "value": "400"}], "start": 1567000087403, "stop": 1567000087403}], "attachments": [{"name": "stdout", "source": "bccffe72-b226-4f00-9053-77e5b047930f-attachment.txt", "type": "text/plain"}], "start": 1567000087394, "stop": 1567000087404, "uuid": "60ce62a5-bc2e-4ed5-9e07-0972e42b4eac", "historyId": "3e7c89fc0ed45dd850854978551903f2", "testCaseId": "919c956789a8e37101a3ed6058d21b5e", "fullName": "tests.api.nps_test#test_when_submitting_empty_feedback_should_receive_error", "labels": [{"name": "feature", "value": "Customer Feedback"}, {"name": "tag", "value": "negative"}, {"name": "tag", "value": "API"}, {"name": "parentSuite", "value": "tests.api"}, {"name": "suite", "value": "nps_test"}, {"name": "subSuite"}, {"name": "host", "value": "Alesias-MacBook-Pro.local"}, {"name": "thread", "value": "11700-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.api.nps_test"}]}